name: Python Critical Security Checks

on:
  push:
    branches: [master, develop, feature/**]
  pull_request:
    branches: [master, develop, release/**]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Configure PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "‚ö†Ô∏è requirements.txt n√£o encontrado, instalando depend√™ncias b√°sicas..."
            pip install pytest ruff bandit safety
          fi

      - name: Verify installations
        run: |
          echo "Vers√µes instaladas:"
          python -m pip list | grep -E "pytest|ruff|bandit|safety"
          python -m pytest --version || echo "‚ùå pytest n√£o instalado"
          ruff --version || echo "‚ùå ruff n√£o instalado"
          bandit --version || echo "‚ùå bandit n√£o instalado"
          safety --version || echo "‚ùå safety n√£o instalado"

      - name: Run Critical Checks
        run: |
          echo "## üî¥ Relat√≥rio de Qualidade" > $GITHUB_STEP_SUMMARY
          echo "### üìÖ Execu√ß√£o: $(TZ='America/Sao_Paulo' date +'%d/%m/%Y %H:%M:%S (BRT)')" >> $GITHUB_STEP_SUMMARY
          
          # An√°lise Est√°tica
          echo "### üîç Ruff (Bugs/Security)" >> $GITHUB_STEP_SUMMARY
          ruff check src/ --select B,S --exit-non-zero-on-fix --format=github | grep "::error" | awk -F'::' '{print "| " $3 " | " $4 " | " $5 " |"}' >> $GITHUB_STEP_SUMMARY || echo "‚úÖ Nenhum problema cr√≠tico encontrado" >> $GITHUB_STEP_SUMMARY

          # Seguran√ßa
          echo "### üîí Bandit (Vulnerabilidades)" >> $GITHUB_STEP_SUMMARY
          bandit -r src/ -ll --severity-level high --confidence-level high -f custom --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}" | awk -F':' '{print "| " $1 " | " $2 " | " $5 " |"}' >> $GITHUB_STEP_SUMMARY || echo "‚úÖ Nenhuma vulnerabilidade alta encontrada" >> $GITHUB_STEP_SUMMARY

          # Depend√™ncias
          echo "### ‚ö†Ô∏è Safety (CVEs Cr√≠ticos)" >> $GITHUB_STEP_SUMMARY
          safety check --output brief | grep -i "CRITICAL" >> $GITHUB_STEP_SUMMARY || echo "‚úÖ Nenhuma vulnerabilidade cr√≠tica em depend√™ncias" >> $GITHUB_STEP_SUMMARY

      - name: Run Tests
        run: |
          if [ -d "src/tests" ]; then
            python -m pytest src/tests -v
          else
            echo "‚ö†Ô∏è Pasta de testes n√£o encontrada em src/tests"
            exit 0
          fi